name: Build on Push
run-name: Building version ${{ github.run_number }}
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

env:
  GODOT_VERSION: 4.3
  GODOT_PROJECT_LOCATION: src
  APPLICATION_NAME: Deans_2D_Projects
  EXPORT_FOLDER_LINUX: bin/Linux
  EXPORT_FOLDER_Windows: bin/Windows

jobs:
  import-assets:
    runs-on: ubuntu-latest
    container: archlinux:latest
    steps:
      - name: Set date variable
        id: get-date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Install dependencies
        run: pacman -Syu --noconfirm git bash yasm python python-pip scons gcc diffutils make wget unzip tar mingw-w64

      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install yay
        run: |
          pacman -S --noconfirm base-devel git sudo
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/builder
          chown -R builder:builder .
          su - builder -c 'git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si --noconfirm'

      - name: Prepare Godot
        run: |
          wget -q -O godot_linux.zip https://github.com/godotengine/godot-builds/releases/download/${GODOT_VERSION}-stable/Godot_v${GODOT_VERSION}-stable_linux.x86_64.zip
          unzip godot_linux.zip

          wget -q -O godot_export_templates.tpz https://github.com/godotengine/godot-builds/releases/download/${GODOT_VERSION}-stable/Godot_v${GODOT_VERSION}-stable_export_templates.tpz
          mkdir -p ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          unzip godot_export_templates.tpz -d ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          mv ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable/templates/* ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable/

          sed -i "s/config\/version=\"[0-9-]\+-alpha\"/config\/version=\"${{ env.date }}-alpha\"/" src/project.godot

      - name: Import assets
        run: |
          ./Godot_v${GODOT_VERSION}-stable_linux.x86_64 --headless --verbose "${GODOT_PROJECT_LOCATION}" --quit

  build:
    needs: import-assets
    runs-on: ubuntu-latest
    container: archlinux:latest
    strategy:
      matrix:
        platform: [linux, windows, macos, web]
        include:
          - platform: linux
            export_folder: bin/Linux
            export_format: "Linux"
            file_extension: x86_64
          - platform: windows
            export_folder: bin/Windows
            export_format: "Windows"
            file_extension: exe
          - platform: macos
            export_folder: bin/MacOS
            export_format: "macOS"
            file_extension: zip
          - platform: web
            export_folder: bin/Web
            export_format: "Web"
            file_extension: html
      fail-fast: false

    permissions: write-all

    env:
      BUILD_NAME: Deans_2D_Projects-${{ matrix.platform }}-nightly-${{ github.run_number }}

    steps:
      - name: Install dependencies
        run: pacman -Syu --noconfirm pkgconf git bash yasm python python-pip scons gcc diffutils make wget unzip tar mingw-w64

      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set date variable
        id: get-date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Prepare Godot
        run: |
          wget -q -O godot_linux.zip https://github.com/godotengine/godot-builds/releases/download/${GODOT_VERSION}-stable/Godot_v${GODOT_VERSION}-stable_linux.x86_64.zip
          unzip godot_linux.zip

          wget -q -O godot_export_templates.tpz https://github.com/godotengine/godot-builds/releases/download/${GODOT_VERSION}-stable/Godot_v${GODOT_VERSION}-stable_export_templates.tpz
          mkdir -p ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          unzip godot_export_templates.tpz -d ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          mv ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable/templates/* ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable/

      - name: Export Game
        run: |
          mkdir -p "${{ matrix.export_folder }}"
          ./Godot_v${GODOT_VERSION}-stable_linux.x86_64 --headless --verbose \
            --export-release "${{ matrix.export_format }}" \
            "${{ matrix.export_folder }}/${{ env.APPLICATION_NAME }}.${{ matrix.file_extension }}"

      - name: Deploy to GitHub Pages
        if: matrix.platform == 'web' && github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: peaceiris/actions-gh-pages@v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ matrix.export_folder }}
          force_orphan: true
          user_name: "github-ci[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          commit_message: "Publish to gh-pages"

      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && success() && matrix.platform != 'web'
        id: create_release
        uses: softprops/action-gh-release@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Build-Version-${{ github.run_number }}
          name: Build ${{ github.run_number }}
          draft: false
          prerelease: true
          files: |
            ${{ matrix.export_folder }}/${{ env.APPLICATION_NAME }}.${{ matrix.file_extension }}
          fail_on_unmatched_files: true
          body: |
            Build generated from commit: ${{ github.sha }}
            Commit Title: ${{ github.event.head_commit.message }}
            Commit Description:
            ${{ github.event.head_commit.description || 'No description provided' }}
            Branch: ${{ github.ref_name }}
            Timestamp: ${{ github.event.head_commit.timestamp }}

      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v4.5.0
        with:
          name: ${{ env.BUILD_NAME }}
          path: ${{ matrix.export_folder }}
          retention-days: 7
          if-no-files-found: error
