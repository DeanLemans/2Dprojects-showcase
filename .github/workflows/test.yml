  name: Build on Push
run-name: Building version ${{ github.run_number }}
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:
  

  
  env:
  GODOT_VERSION: 4.3
  GODOT_PROJECT_LOCATION: src
  APPLICATION_NAME: Deans_2D_Projects
  EXPORT_FOLDER_LINUX: bin/Linux
  EXPORT_FOLDER_WINDOWS: bin/Windows
  EXPORT_FOLDER_WEB: bin/Web
  EXPORT_FOLDER_MACOS: bin/MacOS

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Set variables
        run: |
        echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        echo "MAIN_FOLDER=$(pwd)" >> $GITHUB_ENV
		
      - name: Install dependencies
        run: pacman -Syu --noconfirm git bash yasm python python-pip scons gcc diffutils make wget unzip tar mingw-w64 #pkgconf

      - name: Checkout submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Prepare Godot
        run: |
          wget -q -O godot_linux.zip https://github.com/godotengine/godot-builds/releases/download/${GODOT_VERSION}-stable/Godot_v${GODOT_VERSION}-stable_linux.x86_64.zip
          unzip godot_linux.zip
          wget -q -O godot_export_templates.tpz https://github.com/godotengine/godot-builds/releases/download/${GODOT_VERSION}-stable/Godot_v${GODOT_VERSION}-stable_export_templates.tpz
          mkdir -p ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          unzip godot_export_templates.tpz -d ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          mv ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable/templates/* ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable/
          sed -i "s/config\/version=\"[0-9-]\+-alpha\"/config\/version=\"${{ env.date }}-alpha\"/" src/project.godot
		  

      - name: Building Linux
        run: |
            mkdir -p ${{ env.EXPORT_FOLDER_LINUX }}
            ./Godot_v{{ env.GODOT_VERSION }}-stable_linux.x86_64 --import ${{ env.GODOT_PROJECT_LOCATION }} --quiet --headless --export-release Linux ${{ env.MAIN_FOLDER}} /${{ EXPORT_FOLDER_LINUX }}/${{ env.APPLICATION_NAME }}.x86_64
            chmod +x ${{ EXPORT_FOLDER_LINUX }}/${{ env.APPLICATION_NAME }}.sh
            chmod +x ${{ EXPORT_FOLDER_LINUX }}/${{ env.APPLICATION_NAME }}.86_64
			
      - name: Tar files
        run: tar -cvf ${{ env.APPLICATION_NAME }} _linux_${{env.date }}.tar ${{ env.EXPORT_FOLDER_LINUX }}
			
      - name: uploading gdextension artifacts
        uses: actions/upload-artifact@v4.5.0
        with:
            name: ${{ env.	APPLICATION_NAME }}_linux_${{ env.DATE }}.tar
            path: ${{ env.	APPLICATION_NAME }}_linux_${{ env.DATE }}.tar


      - name: Building Windows	
        run | 
            mkdir -p ${{env.EXPORT_FOLDER_WINDOWS }}
            ./Godot_v{{ env.GODOT_VERSION }}-stable_linux.x86_64 --import ${{ env.GODOT_PROJECT_LOCATION }} --quiet --headless --export-release Windows ${{ env.MAIN_FOLDER}} /${{ EXPORT_FOLDER_WINDOWS }}/${{ env.APPLICATION_NAME }}.exe
     
     - name: uploading gdextension artifacts
        uses: actions/upload-artifact@v4.5.0
        with:
            name: ${{ env.	APPLICATION_NAME }}_windows_${{ env.DATE }}
            path: ${{ env.EXPORT_FOLDER_WINDOWS }}/






      # 123636456
      #- name: Building Linux
        #run: |
        #  scons -C gde_gozen -j4 target=template_debug platform=linux arch=x86_64 use_system=yes dev_build=yes
        #  cp gde_gozen/bin/linux_template_debug/* bin/Linux
       #   ./Godot_v${GODOT_VERSION}-stable_linux.x86_64 --import src/project.godot --quiet --headless --export-debug Linux ../bin/Linux/Linux_Build.x86_64
		  
      # 2
      #- name: Building Linux 
      #  run: |
        #  scons -C gde_gozen -j4 target=template_debug platform=linux arch=x86_64 use_system=no dev_build=yes
       #   cp gde_gozen/bin/linux_full_template_debug/* bin/Linux_full
       #   ./Godot_v${GODOT_VERSION}-stable_linux.x86_64 --import src/project.godot --quiet --headless --export-debug Linux_full ../bin/Linux_full/Linux_Build.x86_64

        #with:
        #  name: linux_full_debug_${{ env.date }}
        #  path: bin/Linux_full
      # 3
     # - name: Building Linux
       # run: |
       #   scons -C gde_gozen -j4 target=template_release platform=linux arch=x86_64 use_system=no enable_small=yes
       #  cp gde_gozen/bin/linux_full_template_release/* bin/Linux
       #   ./Godot_v${GODOT_VERSION}-stable_linux.x86_64 --import src/project.godot --quiet --headless --export-debug Linux_full ../bin/Linux_full/Linux_Build.x86_64
