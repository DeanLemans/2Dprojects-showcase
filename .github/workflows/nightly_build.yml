name: Build on Push
run-name: Building version ${{ github.run_number }}
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  #schedule:
  #- cron: '0 0 * * *'  # Added scheduled nightly builds

jobs:
  build:
    strategy:
      matrix:
        platform: [linux, windows, macos, web]
        include:
          - platform: linux
            runs-on: ubuntu-latest
            export_folder: bin/Linux
            export_format: Linux
          - platform: windows
            runs-on: windows-latest
            export_folder: bin/Windows
            export_format: Windows
          - platform: macos
            runs-on: macos-latest
            export_folder: bin/MacOS
            export_format: macOS
          - platform: web
            runs-on: ubuntu-latest
            export_folder: bin/Web
            export_format: HTML5
            file_extension: html
            container: barichello/godot-ci:4.3 # Added for web builds
      fail-fast: false
      # Continue with other platforms if one fails

    runs-on: ${{ matrix.runs-on }}
    container: ${{ matrix.platform == 'web' && matrix.container || null }}
    permissions: write-all

    env:
      GODOT_VERSION: 4.3
      GODOT_PROJECT_LOCATION: src
      APPLICATION_NAME: Deans_2D_Projects
      BUILD_NAME: Deans_2D_Projects-${{ matrix.platform }}-nightly-${{ github.run_number }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          # Remove lfs: true | not needed

      # Special handling for web platform
      - name: Setup export templates
        if: steps.cache-templates.outputs.cache-hit != 'true' && matrix.platform != 'web'
        run: |
          mkdir -p ./templates
          curl -L -o ./templates/templates.tpz "https://github.com/godotengine/godot/releases/download/4.3-stable/Godot_v4.3-stable_export_templates.tpz"

          echo "Downloaded template archive:"
          ls -la ./templates/templates.tpz
        shell: bash

      - name: Cache Godot templates
        if: matrix.platform != 'web' # Skip for web as it uses container
        id: cache-templates
        uses: actions/cache@v4.2.0
        with:
          path: ./templates
          key: godot-templates-${{ env.GODOT_VERSION }}

      - name: Create export directory
        run: mkdir -p ${{ matrix.export_folder }}

      # Different export process for web
      - name: Export Web Build
        if: matrix.platform == 'web'
        run: |
          godot -v --path ./src --export-release "HTML5" ${{ matrix.export_folder }}/index.html
        shell: bash

      - name: Export Game
        if: matrix.platform != 'web'
        uses: ./.github/actions/export-game
        id: export
        with:
          godot_version: ${{ env.GODOT_VERSION }}
          relative_project_path: ./
          export_path: ${{ matrix.export_folder }}
          export_format: ${{ matrix.export_format }}
        continue-on-error: true

      - name: Check Export Status
        if: matrix.platform != 'web'
        run: |
          if [ "${{ steps.export.outcome }}" == "failure" ]; then
            echo "Export failed, checking logs..."
            cat .godot/logs/editor_*.txt || true
            exit 1
          fi
        shell: bash

      - name: Check export results
        run: |
          echo "Export folder contents:"
          ls -la ${{ matrix.export_folder }}
          if [ -z "$(ls -A ${{ matrix.export_folder }})" ]; then
            echo "Error: Export folder is empty!"
            exit 1
          fi
        shell: bash

      # Deploy web build to GitHub Pages
      - name: Deploy to GitHub Pages
        if: matrix.platform == 'web' && github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: peaceiris/actions-gh-pages@v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ matrix.export_folder }}
          force_orphan: true
          user_name: "github-ci[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          commit_message: "Publish to gh-pages"

      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && success() && matrix.platform != 'web'
        id: create_release
        uses: softprops/action-gh-release@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly-${{ github.run_number }}
          name: Build ${{ github.run_number }}
          draft: false
          prerelease: false
          files: |
            ${{ env.BUILD_NAME }}.${{ matrix.file_extension }}
          fail_on_unmatched_files: true
          body: |
            Build generated from commit: ${{ github.sha }}

            Commit Title: ${{ github.event.head_commit.message }}

            Commit Description:
            ${{ github.event.head_commit.description || 'No description provided' }}

            Branch: ${{ github.ref_name }}
            Timestamp: ${{ github.event.head_commit.timestamp }}

      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v4.5.0
        with:
          name: ${{ env.BUILD_NAME }}
          path: ${{ matrix.export_folder }}
          retention-days: 7
          if-no-files-found: error
